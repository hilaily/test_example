// Code generated by MockGen. DO NOT EDIT.
// Source: gomock.go

// Package main is a generated GoMock package.
package main

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockITestInterface is a mock of ITestInterface interface.
type MockITestInterface struct {
	ctrl     *gomock.Controller
	recorder *MockITestInterfaceMockRecorder
}

// MockITestInterfaceMockRecorder is the mock recorder for MockITestInterface.
type MockITestInterfaceMockRecorder struct {
	mock *MockITestInterface
}

// NewMockITestInterface creates a new mock instance.
func NewMockITestInterface(ctrl *gomock.Controller) *MockITestInterface {
	mock := &MockITestInterface{ctrl: ctrl}
	mock.recorder = &MockITestInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockITestInterface) EXPECT() *MockITestInterfaceMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockITestInterface) Get(name string) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", name)
	ret0, _ := ret[0].(string)
	return ret0
}

// Get indicates an expected call of Get.
func (mr *MockITestInterfaceMockRecorder) Get(name interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockITestInterface)(nil).Get), name)
}
